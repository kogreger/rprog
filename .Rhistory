rpois(5, 2)
set.seed(10)
x <- rbinom(10, 10, 0.5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
y
plot(x, y)
setwd("~/Documents/Coursera/Data Science Specialization/R Programming/rprog/")
outcome <- read.csv("rprog-data-ProgAssignment3-data/outcome-of-care-measures.csv",
colClasses = "character")
head(outcome)
ncol(outcome)
outcome[, 11] <- as.numeric(outcome[, 11])
hist(outcome[, 11])
names(outcome)
hospital.outcome <- read.csv("rprog-data-ProgAssignment3-data/outcome-of-care-measures.csv",
colClasses = "character")
ncol(hospital.outcome)
names(hospital.outcome)
hospital.outcome <- hospital.outcome[, c(2, 7, 11, 17, 23)]
ncol(hospital.outcome)
names(hospital.outcome)
hospital.outcome[, 3] <- as.numeric(hospital.outcome[, 3]) # heart attack
hospital.outcome[, 4] <- as.numeric(hospital.outcome[, 4]) # heart failure
hospital.outcome[, 5] <- as.numeric(hospital.outcome[, 5]) # pneumonia
?subset
?in
?%in
??in
?if
;
?if
else
?ifelse
sum("TX" %in% data[, 2])
sum("TX" %in% data$State)
data$State
## Read outcome data
data <- read.csv("rprog-data-ProgAssignment3-data/outcome-of-care-measures.csv",
colClasses = "character")
# reduce to relevant columns
data <- data[, c(2, 7, 11, 17, 23)]
# coerce outcome rates to numeric
data[, 3] <- as.numeric(data[, 3]) # heart attack
data[, 4] <- as.numeric(data[, 4]) # heart failure
data[, 5] <- as.numeric(data[, 5]) # pneumonia
data$State
sum("TX" %in% data$State)
sum("BB" %in% data$State)
?stop
ifelse(sum("TX" %in% data$State), , stop("invalid state"))
ifelse(sum("TX" %in% data$State), 1, stop("invalid state"))
ifelse(sum("BB" %in% data$State), 1, stop("invalid state"))
?subset
ifelse(sum("heart attack" %in% c("heart attack", "heart failure", "pneumonia")),
1, stop("invalid outcome"))
ifelse(sum("eart attack" %in% c("heart attack", "heart failure", "pneumonia")),
1, stop("invalid outcome"))
outcomes <- cbind(3:5, c("heart attack", "heart failure", "pneumonia"))
outcomes
outcomes <- cbind(as.numeric(3:5), c("heart attack", "heart failure", "pneumonia"))
outcomes
outcomes <- as.data.frame(cbind(3:5,
c("heart attack", "heart failure", "pneumonia"))
outcomes <- as.data.frame(cbind(3:5,
c("heart attack", "heart failure", "pneumonia")))
outcomes <- as.data.frame(cbind(3:5,
c("heart attack", "heart failure", "pneumonia")))
outcomes
names(outcomes) <- c("id", "name")
outcomes
ifelse(sum("pneumonia" %in% outcomes$name), 1, stop("invalid outcome"))
ifelse(sum("neumonia" %in% outcomes$name), 1, stop("invalid outcome"))
outcome.id <- subset(outcomes, name == "pneumonia", select = id)
outcome.id
outcome.id <- as.numeric(subset(outcomes, name == "pneumonia", select = id))
outcome.id
outcome.id <- as.vector(subset(outcomes, name == "pneumonia", select = id))
outcome.id
outcome.id <- as.vector(subset(outcomes, name == "pneumonia")$id)
outcome.id
outcome.id <- as.numeric(subset(outcomes, name == "pneumonia")$id)
outcome.id
outcome.id <- subset(outcomes, name == "pneumonia")$id
outcome.id
?as.scalar
outcome.id <- outcomes[outcomes$name == outcome, outcomes$id]
outcome.id <- outcomes[outcomes$name == "pneumonia", outcomes$id]
outcomes
outcome.id <- outcomes[outcomes$name == "pneumonia", ]$id
outcome.id
names(data)
data <- subset(data, State == state, select = c(1, 2, outcome.id))
data <- subset(data, State == "TX", select = c(1, 2, outcome.id))
data
head(data)
data <- subset(data,
State == "TX",
select = c(1, 2,
outcomes[outcomes$name == "pneumonia", ]$id))
head(data)
outcomes <- cbind(3:5,
c("heart attack", "heart failure", "pneumonia")))
names(outcomes) <- c("id", "name")
outcomes <- cbind(3:5,
c("heart attack", "heart failure", "pneumonia"))
names(outcomes) <- c("id", "name")
class(outcomes)
outcomes
outcomes <- cbind(3:5,
c("heart attack", "heart failure", "pneumonia"))
outcomes
ifelse(sum("TX" %in% outcomes[2]), 1, stop("invalid outcome"))
data <- read.csv("rprog-data-ProgAssignment3-data/outcome-of-care-measures.csv",
colClasses = "character")
# initialize outcome data
outcomes <- as.data.frame(cbind(3:5,
c("heart attack", "heart failure", "pneumonia")))
names(outcomes) <- c("id", "name")
# reduce to relevant columns
data <- data[, c(2, 7, 11, 17, 23)]
# coerce outcome rates to numeric
data[, 3] <- as.numeric(data[, 3]) # heart attack
data[, 4] <- as.numeric(data[, 4]) # heart failure
data[, 5] <- as.numeric(data[, 5]) # pneumonia
# check that state and outcome are valid
ifelse(sum(state %in% data$State), 1, stop("invalid state"))
ifelse(sum(outcome %in% outcomes$name), 1, stop("invalid outcome"))
# reduce to relevant columns
outcome.id <- outcomes[outcomes$name == "pneumonia", ]$id
head(data)
data <- subset(data,
State == "TX",
select = c(1, 2,
outcomes[outcomes$name == "pneumonia", ]$id))
head(data)
data <- read.csv("rprog-data-ProgAssignment3-data/outcome-of-care-measures.csv",
colClasses = "character")
# initialize outcome data
outcomes <- as.data.frame(cbind(3:5,
c("heart attack", "heart failure", "pneumonia")))
names(outcomes) <- c("id", "name")
# reduce to relevant columns
data <- data[, c(2, 7, 11, 17, 23)]
# coerce outcome rates to numeric
data[, 3] <- as.numeric(data[, 3]) # heart attack
data[, 4] <- as.numeric(data[, 4]) # heart failure
data[, 5] <- as.numeric(data[, 5]) # pneumonia
# check that state and outcome are valid
ifelse(sum(state %in% data$State), 1, stop("invalid state"))
ifelse(sum(outcome %in% outcomes$name), 1, stop("invalid outcome"))
# reduce to relevant columns
outcome.id <- outcomes[outcomes$name == "pneumonia", ]$id
outcome.id
class(outcome.id)
outcome.id <- as.numeric(levels(outcomes[outcomes$name == "pneumonia", ]$id))
class(outcome.id)
outcome.id
outcomes
class(outcomes)
outcome.id <- as.numeric(as.character(outcomes[outcomes$name == "pneumonia", ]$id))
outcome.id
data <- subset(data,
State == "TX",
select = c(1, 2, outcome.id))
head(data)
?order
dd[ order(-dd[,4], dd[,1]), ]
data[order(data[,3], dd[,1]), ]
data[order(data[,3], data[,1]), ]
data <- data[order(data[,3], data[,1]), ]
head(data)
data[1, 1]
best <- function(state, outcome) {
# read outcome data
data <- read.csv("rprog-data-ProgAssignment3-data/outcome-of-care-measures.csv",
colClasses = "character")
# initialize outcome data
outcomes <- as.data.frame(cbind(3:5,
c("heart attack", "heart failure", "pneumonia")))
names(outcomes) <- c("id", "name")
# reduce to relevant columns
data <- data[, c(2, 7, 11, 17, 23)]
# coerce outcome rates to numeric
data[, 3] <- as.numeric(data[, 3]) # heart attack
data[, 4] <- as.numeric(data[, 4]) # heart failure
data[, 5] <- as.numeric(data[, 5]) # pneumonia
# check that state and outcome are valid
ifelse(sum(state %in% data$State), 1, stop("invalid state"))
ifelse(sum(outcome %in% outcomes$name), 1, stop("invalid outcome"))
# reduce to relevant columns
outcome.id <- as.numeric(as.character(outcomes[outcomes$name == "pneumonia", ]$id))
data <- subset(data,
State == "TX",
select = c(1, 2, outcome.id))
# order by mortality rate and hospital name
data <- data[order(data[,3], data[,1]), ]
# return hospital name in that state with lowest 30-day death rate
data[1, 1]
}
best <- function(state, outcome) {
# read outcome data
data <- read.csv("rprog-data-ProgAssignment3-data/outcome-of-care-measures.csv",
colClasses = "character")
# initialize outcome data
outcomes <- as.data.frame(cbind(3:5,
c("heart attack", "heart failure", "pneumonia")))
names(outcomes) <- c("id", "name")
# reduce to relevant columns
data <- data[, c(2, 7, 11, 17, 23)]
# coerce outcome rates to numeric
data[, 3] <- as.numeric(data[, 3]) # heart attack
data[, 4] <- as.numeric(data[, 4]) # heart failure
data[, 5] <- as.numeric(data[, 5]) # pneumonia
# check that state and outcome are valid
ifelse(sum(state %in% data$State), 1, stop("invalid state"))
ifelse(sum(outcome %in% outcomes$name), 1, stop("invalid outcome"))
# reduce to relevant columns
outcome.id <- as.numeric(as.character(outcomes[outcomes$name == outcome, ]$id))
data <- subset(data,
State == state,
select = c(1, 2, outcome.id))
# order by mortality rate and hospital name
data <- data[order(data[,3], data[,1]), ]
# return hospital name in that state with lowest 30-day death rate
data[1, 1]
}
best("TX", "heart attack")
best("TX", "heart failure")
best("MD", "heart attack")
best("MD", "pneumonia")
best("BB", "heart attack")
source("best.R")
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript3.R")
submit()
submit()
submit()
# read outcome data
data <- read.csv("rprog-data-ProgAssignment3-data/outcome-of-care-measures.csv",
colClasses = "character")
# initialize outcome data
outcomes <- as.data.frame(cbind(3:5,
c("heart attack", "heart failure", "pneumonia")))
names(outcomes) <- c("id", "name")
# reduce to relevant columns
data <- data[, c(2, 7, 11, 17, 23)]
# coerce outcome rates to numeric
data[, 3] <- as.numeric(data[, 3]) # heart attack
data[, 4] <- as.numeric(data[, 4]) # heart failure
data[, 5] <- as.numeric(data[, 5]) # pneumonia
# check that state and outcome are valid
ifelse(sum(state %in% data$State), 1, stop("invalid state"))
ifelse(sum(outcome %in% outcomes$name), 1, stop("invalid outcome"))
# reduce to relevant columns
outcome.id <- as.numeric(as.character(outcomes[outcomes$name == "heart failure", ]$id))
data <- subset(data,
State == "TX",
select = c(1, 2, outcome.id))
head(data)
data <- data[order(data[,3], data[,1]), ]
head(data)
?subset
nrow(data)
data <- data[complete.cases(data[, 3]), ]
data <- data[order(data[,3], data[,1]), ]
nrow(data)
num = "best"
rank <- ifelse(num == "best", 1,
ifelse(num == "worst", nrow(data), num))
rank
num = "worst"
rank <- ifelse(num == "best", 1,
ifelse(num == "worst", nrow(data), num))
rank
num = 5
rank <- ifelse(num == "best", 1,
ifelse(num == "worst", nrow(data), num))
rank
num = 300
rank <- ifelse(num == "best", 1,
ifelse(num == "worst", nrow(data),
ifelse(num > nrow(data), NA, num)))
rank
data[rank, 1]
ifelse(num == "best", data[1, 1],
ifelse(num == "worst", data[nrow(data), 1],
ifelse(num > nrow(data), NA, data[num, 1])))
num = 5
ifelse(num == "best", data[1, 1],
ifelse(num == "worst", data[nrow(data), 1],
ifelse(num > nrow(data), NA, data[num, 1])))
num = "best"
ifelse(num == "best", data[1, 1],
ifelse(num == "worst", data[nrow(data), 1],
ifelse(num > nrow(data), NA, data[num, 1])))
num = "worst"
ifelse(num == "best", data[1, 1],
ifelse(num == "worst", data[nrow(data), 1],
ifelse(num > nrow(data), NA, data[num, 1])))
rankhospital <- function(state, outcome, num = "best") {
# read outcome data
data <- read.csv("rprog-data-ProgAssignment3-data/outcome-of-care-measures.csv",
colClasses = "character")
# initialize outcome data
outcomes <- as.data.frame(cbind(3:5,
c("heart attack", "heart failure", "pneumonia")))
names(outcomes) <- c("id", "name")
# reduce to relevant columns
data <- data[, c(2, 7, 11, 17, 23)]
# coerce outcome rates to numeric
data[, 3] <- as.numeric(data[, 3]) # heart attack
data[, 4] <- as.numeric(data[, 4]) # heart failure
data[, 5] <- as.numeric(data[, 5]) # pneumonia
# check that state and outcome are valid
ifelse(sum(state %in% data$State), 1, stop("invalid state"))
ifelse(sum(outcome %in% outcomes$name), 1, stop("invalid outcome"))
# reduce to relevant columns
outcome.id <- as.numeric(as.character(outcomes[outcomes$name == outcome, ]$id))
data <- subset(data,
State == state,
select = c(1, 2, outcome.id))
# remove NAs in mortality rate
data <- data[complete.cases(data[, 3]), ]
# order by mortality rate and hospital name
data <- data[order(data[,3], data[,1]), ]
# return hospital name in that state with the given rank 30-day death rate
ifelse(num == "best", data[1, 1],
ifelse(num == "worst", data[nrow(data), 1],
ifelse(num > nrow(data), NA, data[num, 1])))
}
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
>
>
rankhospital("MN", "heart attack", 5000)
source("rankhospital.R")
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript3.R")
submit()
submit()
submit()
submit()
# read outcome data
data <- read.csv("rprog-data-ProgAssignment3-data/outcome-of-care-measures.csv",
colClasses = "character")
# initialize outcome data
outcomes <- as.data.frame(cbind(3:5,
c("heart attack", "heart failure", "pneumonia")))
names(outcomes) <- c("id", "name")
# reduce to relevant columns
data <- data[, c(2, 7, 11, 17, 23)]
# coerce outcome rates to numeric
data[, 3] <- as.numeric(data[, 3]) # heart attack
data[, 4] <- as.numeric(data[, 4]) # heart failure
data[, 5] <- as.numeric(data[, 5]) # pneumonia
# check that state and outcome are valid
ifelse(sum(state %in% data$State), 1, stop("invalid state"))
ifelse(sum(outcome %in% outcomes$name), 1, stop("invalid outcome"))
# reduce to relevant columns
outcome.id <- as.numeric(as.character(outcomes[outcomes$name == "heart attack", ]$id))
data <- data[, c(1, 2, outcome.id)]
head(data)
data <- data[complete.cases(data[, 3]), ]
head(data)
# read outcome data
data <- read.csv("rprog-data-ProgAssignment3-data/outcome-of-care-measures.csv",
colClasses = "character")
# initialize outcome data
outcomes <- as.data.frame(cbind(3:5,
c("heart attack", "heart failure", "pneumonia")))
names(outcomes) <- c("id", "name")
# reduce to relevant columns
data <- data[, c(2, 7, 11, 17, 23)]
# coerce outcome rates to numeric
data[, 3] <- as.numeric(data[, 3]) # heart attack
data[, 4] <- as.numeric(data[, 4]) # heart failure
data[, 5] <- as.numeric(data[, 5]) # pneumonia
# check that state and outcome are valid
ifelse(sum(state %in% data$State), 1, stop("invalid state"))
ifelse(sum(outcome %in% outcomes$name), 1, stop("invalid outcome"))
# reduce to relevant columns
outcome.id <- as.numeric(as.character(outcomes[outcomes$name == "heart attack", ]$id))
data <- data[, c(1, 2, outcome.id)]
# remove NAs in mortality rate
data <- data[complete.cases(data[, 3]), ]
head(data)
data2 <- data.frame(State = names(tapply(data$State,
data$State,
length)),
Freq = tapply(data$State,
data$State,
length))
data2
frequency <- data.frame(State = names(tapply(data$State,
data$State,
length)),
Freq = tapply(data$State,
data$State,
length))
frequency
rownames(frequency) <- NULL
frequency
name <- character(0)
frequency$State
state.table <- frequency[frequency$State == "AK", ]
state.table
state.table <- data[data$State == state, ]
state.table <- data[data$State == "AK", ]
state.table
state.table <- data[data$State == "FL", ]
state.table
state.table <- data[data$State == "TX", ]
state.table
# read outcome data
data <- read.csv("rprog-data-ProgAssignment3-data/outcome-of-care-measures.csv",
colClasses = "character")
# initialize outcome data
outcomes <- as.data.frame(cbind(3:5,
c("heart attack", "heart failure", "pneumonia")))
names(outcomes) <- c("id", "name")
# reduce to relevant columns
data <- data[, c(2, 7, 11, 17, 23)]
# coerce outcome rates to numeric
data[, 3] <- as.numeric(data[, 3]) # heart attack
data[, 4] <- as.numeric(data[, 4]) # heart failure
data[, 5] <- as.numeric(data[, 5]) # pneumonia
# check that state and outcome are valid
ifelse(sum(state %in% data$State), 1, stop("invalid state"))
ifelse(sum(outcome %in% outcomes$name), 1, stop("invalid outcome"))
# reduce to relevant columns
outcome.id <- as.numeric(as.character(outcomes[outcomes$name == "pneumonia", ]$id))
data <- data[, c(1, 2, outcome.id)]
# remove NAs in mortality rate
data <- data[complete.cases(data[, 3]), ]
# return a data frame with the hospital names and the abbr. state name
frequency <- data.frame(State = names(tapply(data$State,
data$State,
length)),
Freq = tapply(data$State,
data$State,
length))
rownames(frequency) <- NULL
name <- character(0)
state.table <- data[data$State == "TX", ]
state.table
state.table
state.table <- state.table[order(state.table[, colNum],
state.table$Hospital.Name), ]
state.table <- state.table[order(state.table[, 3],
state.table$Hospital.Name), ]
state.table
state.table <- data[data$State == "AL", ]
state.table <- state.table[order(state.table[, 3],
state.table$Hospital.Name), ]
state.table <- data[data$State == "AL", ]
state.table
state.table <- state.table[order(state.table[, 3],
state.table$Hospital.Name), ]
state.table
ifelse(num > nrow(data), return(NA), 1)
num = 5000
ifelse(num > nrow(data), return(NA), 1)
rank = 1
name <- c(name, state.table[rank, ]$Hospital.Name)
name
state.table <- data[data$State == "FL", ]
state.table <- state.table[order(state.table[, 3],
state.table$Hospital.Name), ]
name <- c(name, state.table[rank, ]$Hospital.Name)
head(state.table)
rankall <- function(outcome, num = "best") {
# read outcome data
data <- read.csv("rprog-data-ProgAssignment3-data/outcome-of-care-measures.csv",
colClasses = "character")
# initialize outcome data
outcomes <- as.data.frame(cbind(3:5,
c("heart attack", "heart failure", "pneumonia")))
names(outcomes) <- c("id", "name")
# reduce to relevant columns
data <- data[, c(2, 7, 11, 17, 23)]
# coerce outcome rates to numeric
data[, 3] <- as.numeric(data[, 3]) # heart attack
data[, 4] <- as.numeric(data[, 4]) # heart failure
data[, 5] <- as.numeric(data[, 5]) # pneumonia
# check that state and outcome are valid
ifelse(sum(state %in% data$State), 1, stop("invalid state"))
ifelse(sum(outcome %in% outcomes$name), 1, stop("invalid outcome"))
# reduce to relevant columns
outcome.id <- as.numeric(as.character(outcomes[outcomes$name == outcome, ]$id))
data <- data[, c(1, 2, outcome.id)]
# remove NAs in mortality rate
data <- data[complete.cases(data[, 3]), ]
# return a data frame with the hospital names and the abbr. state name
ifelse(num > nrow(data), return(NA), 1)
rank <- ifelse(num == "best", 1,
ifelse(num == "worst", nrow(data), num))
frequency <- data.frame(State = names(tapply(data$State,
data$State,
length)),
Freq = tapply(data$State,
data$State,
length))
rownames(frequency) <- NULL
name <- character(0)
for(state in frequency$State) {
state.table <- data[data$State == state, ]
state.table <- state.table[order(state.table[, 3],
state.table$Hospital.Name), ]
name <- c(name, state.table[rank, ]$Hospital.Name)
}
return(data.frame(hospital = name, state = frequency$State))
}
head(rankall("heart attack", 20), 10)
